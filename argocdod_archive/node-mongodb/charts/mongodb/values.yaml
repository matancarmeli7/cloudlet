image_monitoring:
  repository: quay.io/amitai333/sampleapp2
  tag: latest
APPLICATION_NAME: sampleapp
global:
  namespaceOverride: ""
image:
  registry: docker.io
  repository: bitnami/mongodb
  tag: 4.2.8-debian-10-r37
  pullPolicy: IfNotPresent
  debug: false
clusterDomain: cluster.local
architecture: replicaset
useStatefulSet: true
auth:
  enabled: true
  rootPassword: ""
  username: ""
  password: ""
  database: ""
replicaSetName: ""
replicaSetHostnames: true
enableIPv6: false
directoryPerDB: false
systemLogVerbosity: 0
disableSystemLog: false
configuration: ""
initdbScripts: {}
extraFlags: []
extraEnvVars: []
annotations: {}
labels: {}
replicaCount: ""
strategyType: RollingUpdate
podManagementPolicy: OrderedReady
affinity: {}
nodeSelector: {}
tolerations: []
podLabels: {}
podAnnotations: {}
podSecurityContext:
  enabled: true
  fsGroup: "5555"
  sysctls: {}
containerSecurityContext:
  enabled: false
  runAsUser: 1001080001
resources:
  limits: {}
  requests: {}
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
customLivenessProbe: {}
customReadinessProbe: {}
initContainers: {}
sidecars: {}
extraVolumeMounts: []
extraVolumes: []
pdb:
  create: false
  minAvailable: 1
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}
  mountPath: /bitnami/mongodb
  subPath: ""
service:
  type: ClusterIP
  port: 27017
  portName: mongodb
  nodePort: ""
  externalIPs: []
  loadBalancerSourceRanges: []
  annotations: {}
externalAccess:
  enabled: false
  autoDiscovery:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/kubectl
      tag: 1.18.6-debian-10-r4
      pullPolicy: IfNotPresent
      pullSecrets: []
    resources:
      limits: {}
      requests: {}
  service:
    type: LoadBalancer
    port: 27017
    loadBalancerIPs: []
    loadBalancerSourceRanges: []
    nodePorts: []
    annotations: {}
arbiter:
  configuration: ""
  extraFlags: []
  extraEnvVars: []
  annotations: {}
  labels: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  podSecurityContext:
    enabled: true
    fsGroup: "5555"
    sysctls: {}
  containerSecurityContext:
    enabled: false
    runAsUser: 1001080001
  resources:
    limits: {}
    requests: {}
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  customLivenessProbe: {}
  customReadinessProbe: {}
  initContainers: {}
  sidecars: {}
  extraVolumeMounts: []
  extraVolumes: []
  pdb:
    create: false
    minAvailable: 1
serviceAccount:
  create: true
rbac:
  create: false
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always
    pullSecrets: []
  resources:
    limits: {}
    requests: {}
metrics:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.11.0-debian-10-r87
    pullPolicy: IfNotPresent
  extraFlags: ""
  resources:
    limits: {}
    requests: {}
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
      prometheus.io/path: "/metrics"
    type: ClusterIP
    port: 9216
  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  serviceMonitor:
    enabled: false
    interval: 30s
    additionalLabels: {}
  prometheusRule:
    enabled: false
    additionalLabels: {}
    rules: {}
