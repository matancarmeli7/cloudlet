apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
{{- with .Values }}
  name: "{{.APICAST_NAME}}"
spec:
  replicas: 2
  selector:
    deploymentconfig: "{{.APICAST_NAME}}"
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        deploymentconfig: "{{.APICAST_NAME}}"
    spec:
      containers:
      - env:
        - name: THREESCALE_PORTAL_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: "{{.CONFIGURATION_URL_SECRET}}"
              key: password
{{- if .CONFIGURATION_FILE_PATH }}
        - name: THREESCALE_CONFIG_FILE
          value: "{{.CONFIGURATION_FILE_PATH}}"
{{- end }}
{{- if .DEPLOYMENT_ENVIRONMENT }}
        - name: THREESCALE_DEPLOYMENT_ENV
          value: "{{.DEPLOYMENT_ENVIRONMENT}}"
{{- end }}
{{- if .RESOLVER }}
        - name: RESOLVER
          value: "{{.RESOLVER}}"
{{- end }}
{{- if .SERVICES_LIST }}
        - name: APICAST_SERVICES_LIST
          value: "{{.SERVICES_LIST}}"
{{- end }}
{{- if .CONFIGURATION_LOADER }}
        - name: APICAST_CONFIGURATION_LOADER
          value: "{{.CONFIGURATION_LOADER}}"
{{- end }}
{{- if .LOG_LEVEL }}
        - name: APICAST_LOG_LEVEL
          value: "{{.LOG_LEVEL}}"
{{- end }}
{{- if .PATH_ROUTING }}
        - name: APICAST_PATH_ROUTING
          value: "{{.PATH_ROUTING}}"
{{- end }}
{{- if .RESPONSE_CODES }}
        - name: APICAST_RESPONSE_CODES
          value: "{{.RESPONSE_CODES}}"
{{- end }}
{{- if .CONFIGURATION_CACHE }}
        - name: APICAST_CONFIGURATION_CACHE
          value: "{{.CONFIGURATION_CACHE}}"
{{- end }}
{{- if .REDIS_URL }}
        - name: REDIS_URL
          value: "{{.REDIS_URL}}"
{{- end }}
{{- if .MANAGEMENT_API }}
        - name: APICAST_MANAGEMENT_API
          value: "{{.MANAGEMENT_API}}"
{{- end }}
{{- if .OPENSSL_VERIFY }}
        - name: OPENSSL_VERIFY
          value: "{{.OPENSSL_VERIFY}}"
{{- end }}
{{- if .REPORTING_THREADS }}
        - name: APICAST_REPORTING_THREADS 
          value: "{{.REPORTING_THREADS}}"
{{- end }}
{{- if .APICAST_WORKERS }}
        - name: APICAST_WORKERS
          value: "{{.APICAST_WORKERS}}"
{{- end }}
        image: quay.apps.{{ .Values.configmap.fqdn }}/{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: "{{.APICAST_NAME}}"
        livenessProbe:
          httpGet:
            path: /status/live
            port: management
          initialDelaySeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /status/ready
            port: management
          initialDelaySeconds: 15
          timeoutSeconds: 1
        ports:
        - name: proxy
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 8090
          protocol: TCP
        volumeMounts:
        - name: trusted-ca
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
      volumes:
      - name: trusted-ca
        configMap:
          name: trusted-ca
          items:
            - key: ca-bundle.crt 
              path: tls-ca-bundle.pem    
  triggers:
  - type: ConfigChange
{{- end }}
